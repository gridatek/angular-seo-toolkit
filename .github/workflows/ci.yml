name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  actions: read
  contents: read
  pull-requests: write


jobs:
  main:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install dependencies
        run: npm ci --legacy-peer-deps

      - name: Install Playwright browsers
        run: npx playwright install --with-deps

      # Run all CI tasks
      - name: Run linting
        run: npx nx run-many -t lint

      - name: Run tests
        run: npx nx run-many -t test --passWithNoTests

      - name: Run builds
        run: npx nx run-many -t build

      - name: Run E2E tests
        run: npx nx run-many -t e2e

      # Upload test results and build artifacts
      - name: Upload Playwright Test Results
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: playwright-results
          path: |
            **/playwright-report/
            **/test-output/
          retention-days: 7

      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: |
            dist/
            !dist/**/*.map
          retention-days: 1

      # Comment on PR with build status
      - name: Comment on PR
        uses: actions/github-script@v7
        if: github.event_name == 'pull_request'
        with:
          script: |
            const { data: pr } = await github.rest.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number,
            });

            const status = '${{ job.status }}' === 'success' ? '✅ Passed' : '❌ Failed';
            const body = `## CI Build Status: ${status}

            **Build Summary:**
            - ✅ Linting completed
            - ✅ Tests completed
            - ✅ Build completed
            - ✅ E2E tests completed

            **Commit:** \`${context.sha.substring(0, 7)}\`
            **Workflow:** [View details](https://github.com/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId})
            `;

            // Find existing comment
            const comments = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
            });

            const existingComment = comments.data.find(
              comment => comment.user.login === 'github-actions[bot]' &&
                         comment.body.includes('CI Build Status')
            );

            if (existingComment) {
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: existingComment.id,
                body: body
              });
            } else {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: body
              });
            }

